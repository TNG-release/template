// This example only shows how the environment variables provided by the GitHub action
// are used for the different plugins related to the publishing process.
// Thus, the configuration of the project is clearly incomplete!
plugins {
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0" apply true
}

ext.isReleaseVersion = !project.version.endsWith("-SNAPSHOT")

nexusPublishing {
    packageGroup = 'com.tngtech'
    repositories {
        sonatype {
            username = findProperty("sonatypeUsername")
            password = findProperty("sonatypePassword")
        }
    }
}

releaseProjects*.with {
    apply plugin: "maven-publish"
    apply plugin: "signing"


    tasks.withType(PublishToMavenRepository) {
        it.doFirst {
            assert !gradle.startParameter.isParallelProjectExecutionEnabled():
                    'uploading archives with parallel execution seems to lead to broken uploads in Sonatype Nexus'
        }
    }

    signing {
        // requires gradle.properties, see http://www.gradle.org/docs/current/userguide/signing_plugin.html
        required {
            isReleaseVersion && gradle.taskGraph.hasTask('publish')
        }
        def signingKey = findProperty("signingKey")
        def signingPassword = findProperty("signingPassword")
        useInMemoryPgpKeys(signingKey, signingPassword)
        sign publishing.publications.mavenJava
    }
}
