// This example only shows how the environment variables provided by the GitHub action
// are used for the different plugins related to the publishing process.
// Thus, the configuration of the project is clearly incomplete!
plugins {
    id 'io.codearte.nexus-staging' version '0.21.1'
    id 'maven-publish'
    id 'signing'
}

version = "1.0.0"
isReleaseVersion = !version.endsWith("SNAPSHOT")
sonatypeUsername =  findProperty("sonatypeUsername")
sonatypePassword = findProperty("sonatypePassword")

// see https://github.com/Codearte/gradle-nexus-staging-plugin
nexusStaging {
    stagingProfileId = stagingProfileId
    packageGroup = 'com.tngtech'
    username = sonatypeUsername
    password = sonatypePassword
    numberOfRetries = 30 // Sonatype can be a bit slow in closing the repository
}

publishing {
    // see https://docs.gradle.org/current/userguide/publishing_maven.html
    publications {
        mavenJava(MavenPublication) {
            // ...
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username = sonatypeUsername
                password = sonatypePassword
            }

            metadataSources {
                gradleMetadata()
            }
        }
    }
}

// signing plugin, see http://www.gradle.org/docs/current/userguide/signing_plugin.html
signing {
    required {
        isReleaseVersion && gradle.taskGraph.hasTask('publish')
    }
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign configurations.archives
}
